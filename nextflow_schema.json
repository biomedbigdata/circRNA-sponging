{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/circrnasponging/master/nextflow_schema.json",
    "title": "nf-core/circrnasponging pipeline parameters",
    "description": "Analysis of circRNA and miRNA sponging",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "single_end": {
                    "type": "boolean",
                    "description": "Specifies that the input is single-end reads.",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "By default, the pipeline expects paired-end data. If you have single-end data, you need to specify `--single_end` on the command line when you launch the pipeline. A normal glob pattern, enclosed in quotation marks, can then be used for `--input`. For example:\n\n```bash\n--single_end --input '*.fastq'\n```\n\nIt is not possible to run a mixture of single-end and paired-end files in one run."
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for the reference genome indices used to align reads.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`.\n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-font",
                    "description": "Path to FASTA genome file.",
                    "help_text": "If you have no genome reference available, the pipeline can build one using a FASTA file. This requires additional time and resources, so it's better to use a pre-build index if possible."
                },
                "igenomes_base": {
                    "type": "string",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes/",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        }
    ],
    "properties": {
        "bed12": {
            "type": "string",
            "default": null
        },
        "gtf": {
            "type": "string",
            "default": null
        },
        "STAR_index": {
            "type": "string",
            "default": null
        },
        "transcriptome": {
            "type": "string",
            "default": null
        },
        "samplesheet": {
            "type": "string",
            "default": null
        },
        "miRNA_raw_counts": {
            "type": "string",
            "default": null
        },
        "miRNA_normalization": {
            "type": "string",
            "default": "true"
        },
        "miRNA_filtering": {
            "type": "string",
            "default": "true"
        },
        "miRNA_adapter": {
            "type": "string",
            "default": null
        },
        "bowtie_index": {
            "type": "string",
            "default": null
        },
        "species": {
            "type": "string",
            "default": null
        },
        "miRNA_fasta": {
            "type": "string",
            "default": null
        },
        "miRNA_related_fasta": {
            "type": "string",
            "default": null
        },
        "hairpin_fasta": {
            "type": "string",
            "default": null
        },
        "sample_group": {
            "type": "string",
            "default": null
        },
        "read_threshold": {
            "type": "integer",
            "default": 5
        },
        "sample_percentage": {
            "type": "number",
            "default": 0.2
        },
        "circRNA_only": {
            "type": "string",
            "default": "false"
        },
        "offline_circ_db": {
            "type": "string",
            "default": null
        },
        "database_annotation": {
            "type": "string",
            "default": "true"
        },
        "annotated_only": {
            "type": "string",
            "default": "false"
        },
        "quantification": {
            "type": "string",
            "default": "true"
        },
        "psirc_exc": {
            "type": "string",
            "default": null
        },
        "psirc_index": {
            "type": "string",
            "default": null
        },
        "pseudocount": {
            "type": "number",
            "default": 0.001
        },
        "differential_expression": {
            "type": "string",
            "default": "true"
        },
        "pita": {
            "type": "string",
            "default": "false"
        },
        "pita_path": {
            "type": "string",
            "default": null
        },
        "pita_l": {
            "type": "string",
            "default": "6-8"
        },
        "pita_gu": {
            "type": "string",
            "default": "6;0,7;1,8;1"
        },
        "pita_m": {
            "type": "string",
            "default": "6;0,7;0,8;1"
        },
        "tarpmir": {
            "type": "string",
            "default": "false"
        },
        "model": {
            "type": "string",
            "default": null
        },
        "p": {
            "type": "number",
            "default": 0.8
        },
        "threads": {
            "type": "integer",
            "default": 2
        },
        "splitter": {
            "type": "integer",
            "default": 50
        },
        "correlations": {
            "type": "string",
            "default": "true"
        },
        "sponge": {
            "type": "string",
            "default": "false"
        },
        "target_scan_symbols": {
            "type": "string",
            "default": null
        },
        "tpm": {
            "type": "string",
            "default": "true"
        },
        "normalize": {
            "type": "string",
            "default": "true"
        },
        "majority_matcher": {
            "type": "string",
            "default": "end"
        },
        "fdr": {
            "type": "number",
            "default": 0.01
        },
        "spongEffects": {
            "type": "string",
            "default": "false"
        },
        "se_train": {
            "type": "number",
            "default": 0.8
        }
    }
}
